from telegram import Update, ReplyKeyboardMarkup, KeyboardButton
from telegram.ext import Application, CommandHandler, MessageHandler, filters, ContextTypes
# ... —ñ—Å–Ω—É—é—á–∏–π –∫–æ–¥ —ñ–º–ø–æ—Ä—Ç—ñ–≤ —Ç–∞ –Ω–∞–ª–∞—à—Ç—É–≤–∞–Ω—å ...

keyboard = [
    [KeyboardButton("‚ö°Ô∏è –í–∏–∫–ª–∏–∫–∞—Ç–∏ –µ–ª–µ–∫—Ç—Ä–∏–∫–∞")],
    [KeyboardButton("üí° –î—ñ–∑–Ω–∞—Ç–∏—Å—å —Ü—ñ–Ω–∏"), KeyboardButton("‚ùì FAQ")],
    [KeyboardButton("üìù –ó–∞–ª–∏—à–∏—Ç–∏ –∑–∞—è–≤–∫—É"), KeyboardButton("üìù –í—ñ–¥–≥—É–∫")],
    [KeyboardButton("üìû –ö–æ–Ω—Ç–∞–∫—Ç–∏")]
]
reply_markup = ReplyKeyboardMarkup(keyboard, resize_keyboard=True)

async def start(update: Update, context: ContextTypes.DEFAULT_TYPE) -> None:
    user = update.effective_user
    logger.info(f"start() called by user: {user.id} ({user.first_name})")
    await update.message.reply_text(
        f'–í—ñ—Ç–∞—î–º–æ, {user.first_name}! –Ø –±–æ—Ç ElectroService ‚ö°Ô∏è\n'
        '–û–±–µ—Ä—ñ—Ç—å –¥—ñ—é –Ω–∏–∂—á–µ –∞–±–æ –Ω–∞–ø–∏—à—ñ—Ç—å –ø–∏—Ç–∞–Ω–Ω—è.\n'
        '–ú–∏ –¥–æ–ø–æ–º–æ–∂–µ–º–æ –∑ –µ–ª–µ–∫—Ç—Ä–∏–∫–æ—é —É –†—ñ–≤–Ω–æ–º—É —Ç–∞ –æ–±–ª–∞—Å—Ç—ñ.',
        reply_markup=reply_markup
    )

async def handle_message(update: Update, context: ContextTypes.DEFAULT_TYPE) -> None:
    user = update.effective_user
    message = update.message.text
    logger.info(f"handle_message() called by user: {user.id} ({user.first_name}), message: {message}")

    if message == "‚ö°Ô∏è –í–∏–∫–ª–∏–∫–∞—Ç–∏ –µ–ª–µ–∫—Ç—Ä–∏–∫–∞":
        await update.message.reply_text("–ó–∞–ª–∏—à—Ç–µ –∞–¥—Ä–µ—Å—É —Ç–∞ –∫–æ—Ä–æ—Ç–∫–æ –æ–ø–∏—à—ñ—Ç—å –ø—Ä–æ–±–ª–µ–º—É ‚Äî –Ω–∞—à –º–∞–π—Å—Ç–µ—Ä –∑–≤'—è–∂–µ—Ç—å—Å—è –∑ –≤–∞–º–∏ –Ω–∞–π–±–ª–∏–∂—á–∏–º —á–∞—Å–æ–º.")
        return
    elif message == "üí° –î—ñ–∑–Ω–∞—Ç–∏—Å—å —Ü—ñ–Ω–∏":
        await update.message.reply_text("–û–∑–Ω–∞–π–æ–º–∏—Ç–∏—Å—å –∑ –æ—Ä—ñ—î–Ω—Ç–æ–≤–Ω–∏–º–∏ —Ü—ñ–Ω–∞–º–∏ –º–æ–∂–Ω–∞ –Ω–∞ –Ω–∞—à–æ–º—É —Å–∞–π—Ç—ñ electroservice.com.ua –∞–±–æ —É—Ç–æ—á–Ω–∏—Ç–∏ —É –º–µ–Ω–µ–¥–∂–µ—Ä–∞.")
        return
    elif message == "‚ùì FAQ":
        await update.message.reply_text(
            "–ü–æ—à–∏—Ä–µ–Ω—ñ –ø–∏—Ç–∞–Ω–Ω—è:\n"
            "‚Äî –Ø–∫—ñ –ø–æ—Å–ª—É–≥–∏ –≤–∏ –Ω–∞–¥–∞—î—Ç–µ?\n"
            "‚Äî –Ø–∫—ñ —Ü—ñ–Ω–∏?\n"
            "‚Äî –Ø–∫ —à–≤–∏–¥–∫–æ –ø—Ä–∏—ó–¥–µ –º–∞–π—Å—Ç–µ—Ä?\n"
            "‚Äî –Ø–∫ –æ–ø–ª–∞—Ç–∏—Ç–∏?\n"
            "‚Äî –ß–∏ —î –≥–∞—Ä–∞–Ω—Ç—ñ—è?\n"
            "–ü–æ—Å—Ç–∞–≤—Ç–µ —Å–≤–æ—î –ø–∏—Ç–∞–Ω–Ω—è ‚Äî —ñ –º–∏ –≤—ñ–¥–ø–æ–≤—ñ–º–æ!"
        )
        return
    elif message == "üìû –ö–æ–Ω—Ç–∞–∫—Ç–∏":
        await update.message.reply_text(
            "–ù–∞—à—ñ –∫–æ–Ω—Ç–∞–∫—Ç–∏:\n"
            "–º. –†—ñ–≤–Ω–µ, –≤—É–ª. –ï–ª–µ–∫—Ç—Ä–∏–∫—ñ–≤, 1\n"
            "–¢–µ–ª–µ—Ñ–æ–Ω: +380 67 123 45 67\n"
            "Email: electroservice33000@gmail.com\n"
            "–°–∞–π—Ç: electroservice.com.ua"
        )
        return
    elif message == "üìù –ó–∞–ª–∏—à–∏—Ç–∏ –∑–∞—è–≤–∫—É":
        await update.message.reply_text("–ù–∞–ø–∏—à—ñ—Ç—å, –±—É–¥—å –ª–∞—Å–∫–∞, –∞–¥—Ä–µ—Å—É, —Å—É—Ç—å –ø—Ä–æ–±–ª–µ–º–∏ —Ç–∞ –∫–æ–Ω—Ç–∞–∫—Ç–Ω–∏–π –Ω–æ–º–µ—Ä.")
        return
    elif message == "üìù –í—ñ–¥–≥—É–∫":
        await update.message.reply_text("–ë—É–¥–µ–º–æ –≤–¥—è—á–Ω—ñ –∑–∞ –≤–∞—à –≤—ñ–¥–≥—É–∫! –ù–∞–ø–∏—à—ñ—Ç—å –π–æ–≥–æ —É –≤—ñ–¥–ø–æ–≤—ñ–¥—å –Ω–∞ —Ü–µ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è.")
        return

    # –ü–µ—Ä–µ—Å–∏–ª–∞–Ω–Ω—è –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –∞–¥–º—ñ–Ω—É
    await context.bot.send_message(
        chat_id=ADMIN_CHAT_ID,
        text=f'–ù–æ–≤–µ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –≤—ñ–¥ {user.first_name} (ID: {user.id}):\n\n{message}'
    )
    await update.message.reply_text('–í–∞—à–µ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –æ—Ç—Ä–∏–º–∞–Ω–æ —Ç–∞ –ø–µ—Ä–µ–¥–∞–Ω–æ –∞–¥–º—ñ–Ω—ñ—Å—Ç—Ä–∞—Ç–æ—Ä—É.')

# Add health check endpoint
async def health_check(request):
    return web.Response(text="OK")

app.router.add_get("/health", health_check)
# –î–æ–¥–∞—é —â–µ –æ–¥–∏–Ω endpoint –Ω–∞ '/'
app.router.add_get("/", health_check)
# ... —Ä–µ—à—Ç–∞ –∫–æ–¥—É –±–µ–∑ –∑–º—ñ–Ω ... 